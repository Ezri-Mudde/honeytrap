language: go

go:
  - stable
  - 1.13.x

jobs:
  include:
    - stage: port
      go: stable
      if: branch = master
      env:
        - secure: "RjOgDnl9279bT2HyZOrA+0tlesauS2yKMfCaSp8o9vDX5kX/WfoZtkU18uKGiPUqwW4q1Y3k6y469Y0cjxl16IiilKSjxUrqpmU/EbNzFrQlqVdzQtZvYMBwP+2p3ptD/KaX3NY0mK81Djr32aRMRU/EKQ2T4VtdlAM0fqdBu18o//8erbxlFbQg/ZheNUMJFhyb6MJgrAMYpudzv8h0hV8TRNpDAynF2+A9JKlEPniastwFSJ+q+fn6apKmFfEP/MYOZlJP2OqP0ps2wLN4pmKkWIRafLJMrIKgeDsUFa7rw6ib2vu93MfrQOWS96X9pJDS7rzJzAyon8oX3luoOD501LztvRAobDSpUsH5Xmdup05yUqXZOr/JJR2AeFW5IjvHQ+UWJ1u0oXP8T6REHHc8vCu0qKZJUBkfF2Tw+LgRp/LPl4/bkOsXfQdj0Dtl6oP3a4aKInWDKIGU0955LofbzZhnLEpU+6RRc56pNoCQYU+S2+y2NyOdE93lgx9+hp0f0S2MpBGWKM4Mf7xwX/FaeJdGRf1oeDxPgTU5FKRc1++fVjdYyHvCpMgyq26+CAITtq7BHPn49RAgoPv08XYeRpfOPkThymLUd3PTdLnWopM6GCey3h4tOajCU+dj6oLRE2+3Js5wYCVWU0cIZm/O/LtzMveRNM0Nacmmn5Y="
      script: curl -X POST -F token="$GITLAB_TOKEN" -F ref=dev https://gitlab.com/api/v4/projects/15011809/trigger/pipeline

sudo: required
dist: xenial

go_import_path: github.com/honeytrap/honeytrap

services:
  - docker

os:
  - linux

env:
  - GIMME_OS=linux GIMME_ARCH=amd64 GO111MODULE=on

addons:
  apt:
    sources:
      - ppa:ubuntu-lxc/stable
    packages:
      - lxc
      - lxc-dev

before_install:
    # - sudo add-apt-repository -y ppa:ubuntu-lxc/stable
  - sudo apt-get update -qq
  - sudo apt-get install -y software-properties-common python-software-properties lxc lxc-dev
  - go get github.com/axw/gocov/gocov github.com/mattn/goveralls github.com/tcnksm/ghr
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin 

install:
  - go get -v github.com/honeytrap/honeytrap

script:
  - $GOPATH/bin/golangci-lint run
  # Go 1.9 doesn't support `go test -coverprofile` with multiple packages, so run basic tests instead
  - if [[ -z "$(go version | grep '1\.9')" ]]; then go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...; else go test -v ./...; fi
  - rm -rf $(go env CACHEDIR) && go build ./...
  - rm -rf $(go env CACHEDIR) && go build -tags "lxc" ./...
  - GOOS=linux GOARCH=arm64 go build ./...
  - GOOS=windows GOARCH=amd64 go build ./...
  - GOOS=darwin GOARCH=amd64 go build ./...

after_success:
  - bash <(curl -s https://codecov.io/bash)

notifications:
  slack: honeycast:P9gQukyVSKgFEyoGh2efeK1H 
